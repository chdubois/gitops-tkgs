apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  annotations:
    osInfo: ubuntu,20.04,amd64
    tkg/plan: dev
  labels:
    tanzuKubernetesRelease: v1.21.2---vmware.1-tkg.1
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 100.96.0.0/11
    services:
      cidrBlocks:
      - 100.64.0.0/13
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: argo-tkg1-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSCluster
    name: argo-tkg1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSCluster
metadata:
  name: argo-tkg1
  namespace: default
spec:
  bastion:
    enabled: false
  networkSpec:
    cni:
      cniIngressRules:
      - description: antrea1
        fromPort: 10349
        protocol: tcp
        toPort: 10349
      - description: genev
        fromPort: 6081
        protocol: udp
        toPort: 6081
      - description: kapp-controller
        fromPort: 10100
        protocol: tcp
        toPort: 10100
    subnets:
    - availabilityZone: eu-west-1a
      cidrBlock: ""
      id: subnet-0ad8037f3866034e2
    - availabilityZone: eu-west-1a
      cidrBlock: ""
      id: subnet-0fb6afddee13c16b7
      isPublic: true
    vpc:
      cidrBlock: ""
      id: vpc-08f20a803623faaed
  region: eu-west-1
  sshKeyName: default
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: argo-tkg1-control-plane
  namespace: default
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSMachineTemplate
    name: argo-tkg1-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          audit-log-maxage: "30"
          audit-log-maxbackup: "10"
          audit-log-maxsize: "100"
          audit-log-path: /var/log/kubernetes/audit.log
          audit-policy-file: /etc/kubernetes/audit-policy.yaml
          cloud-provider: aws
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384
        extraVolumes:
        - hostPath: /etc/kubernetes/audit-policy.yaml
          mountPath: /etc/kubernetes/audit-policy.yaml
          name: audit-policy
        - hostPath: /var/log/kubernetes
          mountPath: /var/log/kubernetes
          name: audit-logs
        timeoutForControlPlane: 8m0s
      controllerManager:
        extraArgs:
          cloud-provider: aws
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      dns:
        imageRepository: projects.registry.vmware.com/tkg
        imageTag: v1.8.0_vmware.5
        type: CoreDNS
      etcd:
        local:
          dataDir: /var/lib/etcd
          extraArgs:
            cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          imageRepository: projects.registry.vmware.com/tkg
          imageTag: v3.4.13_vmware.15
      imageRepository: projects.registry.vmware.com/tkg
      scheduler:
        extraArgs:
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    files:
    - content: YXBpVmVyc2lvbjogYXVkaXQuazhzLmlvL3YxYmV0YTEKa2luZDogUG9saWN5CnJ1bGVzOgotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06a3ViZS1wcm94eQogIHZlcmJzOgogIC0gd2F0Y2gKICByZXNvdXJjZXM6CiAgLSBncm91cDogIiIKICAgIHJlc291cmNlczoKICAgIC0gZW5kcG9pbnRzCiAgICAtIHNlcnZpY2VzCiAgICAtIHNlcnZpY2VzL3N0YXR1cwotIGxldmVsOiBOb25lCiAgdXNlckdyb3VwczoKICAtIHN5c3RlbTpub2RlcwogIHZlcmJzOgogIC0gZ2V0CiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIG5vZGVzCiAgICAtIG5vZGVzL3N0YXR1cwotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06a3ViZS1jb250cm9sbGVyLW1hbmFnZXIKICAtIHN5c3RlbTprdWJlLXNjaGVkdWxlcgogIC0gc3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmVuZHBvaW50LWNvbnRyb2xsZXIKICB2ZXJiczoKICAtIGdldAogIC0gdXBkYXRlCiAgbmFtZXNwYWNlczoKICAtIGt1YmUtc3lzdGVtCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIGVuZHBvaW50cwotIGxldmVsOiBOb25lCiAgdXNlcnM6CiAgLSBzeXN0ZW06YXBpc2VydmVyCiAgdmVyYnM6CiAgLSBnZXQKICByZXNvdXJjZXM6CiAgLSBncm91cDogIiIKICAgIHJlc291cmNlczoKICAgIC0gbmFtZXNwYWNlcwogICAgLSBuYW1lc3BhY2VzL3N0YXR1cwogICAgLSBuYW1lc3BhY2VzL2ZpbmFsaXplCi0gbGV2ZWw6IE5vbmUKICB1c2VyczoKICAtIHN5c3RlbTprdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6IG1ldHJpY3MuazhzLmlvCi0gbGV2ZWw6IE5vbmUKICBub25SZXNvdXJjZVVSTHM6CiAgLSAvaGVhbHRoeioKICAtIC92ZXJzaW9uCiAgLSAvc3dhZ2dlcioKLSBsZXZlbDogTm9uZQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogICAgcmVzb3VyY2VzOgogICAgLSBldmVudHMKLSBsZXZlbDogTm9uZQogIHVzZXJHcm91cHM6CiAgLSBzeXN0ZW06c2VydmljZWFjY291bnRzOnZtd2FyZS1zeXN0ZW0tdG1jCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gbGV2ZWw6IE5vbmUKICB1c2VyczoKICAtIHN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpnZW5lcmljLWdhcmJhZ2UtY29sbGVjdG9yCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gbGV2ZWw6IFJlcXVlc3QKICB1c2VyR3JvdXBzOgogIC0gc3lzdGVtOm5vZGVzCiAgdmVyYnM6CiAgLSB1cGRhdGUKICAtIHBhdGNoCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgICByZXNvdXJjZXM6CiAgICAtIG5vZGVzL3N0YXR1cwogICAgLSBwb2RzL3N0YXR1cwogIG9taXRTdGFnZXM6CiAgLSBSZXF1ZXN0UmVjZWl2ZWQKLSBsZXZlbDogUmVxdWVzdAogIHVzZXJzOgogIC0gc3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOm5hbWVzcGFjZS1jb250cm9sbGVyCiAgdmVyYnM6CiAgLSBkZWxldGVjb2xsZWN0aW9uCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBNZXRhZGF0YQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogICAgcmVzb3VyY2VzOgogICAgLSBzZWNyZXRzCiAgICAtIGNvbmZpZ21hcHMKICAtIGdyb3VwOiBhdXRoZW50aWNhdGlvbi5rOHMuaW8KICAgIHJlc291cmNlczoKICAgIC0gdG9rZW5yZXZpZXdzCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBSZXF1ZXN0CiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgcmVzb3VyY2VzOgogIC0gZ3JvdXA6ICIiCiAgLSBncm91cDogYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGFwaWV4dGVuc2lvbnMuazhzLmlvCiAgLSBncm91cDogYXBpcmVnaXN0cmF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGFwcHMKICAtIGdyb3VwOiBhdXRoZW50aWNhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhdXRob3JpemF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IGF1dG9zY2FsaW5nCiAgLSBncm91cDogYmF0Y2gKICAtIGdyb3VwOiBjZXJ0aWZpY2F0ZXMuazhzLmlvCiAgLSBncm91cDogZXh0ZW5zaW9ucwogIC0gZ3JvdXA6IG1ldHJpY3MuazhzLmlvCiAgLSBncm91cDogbmV0d29ya2luZy5rOHMuaW8KICAtIGdyb3VwOiBwb2xpY3kKICAtIGdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAgLSBncm91cDogc2V0dGluZ3MuazhzLmlvCiAgLSBncm91cDogc3RvcmFnZS5rOHMuaW8KICBvbWl0U3RhZ2VzOgogIC0gUmVxdWVzdFJlY2VpdmVkCi0gbGV2ZWw6IFJlcXVlc3RSZXNwb25zZQogIHJlc291cmNlczoKICAtIGdyb3VwOiAiIgogIC0gZ3JvdXA6IGFkbWlzc2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhcGlleHRlbnNpb25zLms4cy5pbwogIC0gZ3JvdXA6IGFwaXJlZ2lzdHJhdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhcHBzCiAgLSBncm91cDogYXV0aGVudGljYXRpb24uazhzLmlvCiAgLSBncm91cDogYXV0aG9yaXphdGlvbi5rOHMuaW8KICAtIGdyb3VwOiBhdXRvc2NhbGluZwogIC0gZ3JvdXA6IGJhdGNoCiAgLSBncm91cDogY2VydGlmaWNhdGVzLms4cy5pbwogIC0gZ3JvdXA6IGV4dGVuc2lvbnMKICAtIGdyb3VwOiBtZXRyaWNzLms4cy5pbwogIC0gZ3JvdXA6IG5ldHdvcmtpbmcuazhzLmlvCiAgLSBncm91cDogcG9saWN5CiAgLSBncm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIC0gZ3JvdXA6IHNldHRpbmdzLms4cy5pbwogIC0gZ3JvdXA6IHN0b3JhZ2UuazhzLmlvCiAgb21pdFN0YWdlczoKICAtIFJlcXVlc3RSZWNlaXZlZAotIGxldmVsOiBNZXRhZGF0YQogIG9taXRTdGFnZXM6CiAgLSBSZXF1ZXN0UmVjZWl2ZWQK
      encoding: base64
      owner: root:root
      path: /etc/kubernetes/audit-policy.yaml
      permissions: "0600"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        name: '{{ ds.meta_data.local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: aws
          tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        name: '{{ ds.meta_data.local_hostname }}'
    useExperimentalRetryJoin: true
  replicas: 1
  version: v1.21.2+vmware.1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachineTemplate
metadata:
  name: argo-tkg1-control-plane
  namespace: default
spec:
  template:
    spec:
      ami:
        id: ami-08e4426e266ae1051
      iamInstanceProfile: control-plane.tkg.cloud.vmware.com
      instanceType: t3.large
      rootVolume:
        size: 80
      sshKeyName: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachineTemplate
metadata:
  name: argo-tkg1-md-0
  namespace: default
spec:
  template:
    spec:
      ami:
        id: ami-08e4426e266ae1051
      iamInstanceProfile: nodes.tkg.cloud.vmware.com
      instanceType: m5.large
      rootVolume:
        size: 80
      sshKeyName: default
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: argo-tkg1-md-0
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: aws
            tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          name: '{{ ds.meta_data.local_hostname }}'
      useExperimentalRetryJoin: true
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: argo-tkg1-md-0
  namespace: default
spec:
  clusterName: argo-tkg1
  replicas: 1
  selector:
    matchLabels: null
  template:
    metadata:
      labels:
        node-pool: argo-tkg1-worker-pool
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: argo-tkg1-md-0
      clusterName: argo-tkg1
      failureDomain: eu-west-1a
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AWSMachineTemplate
        name: argo-tkg1-md-0
      version: v1.21.2+vmware.1
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: authentication/pinniped
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/addon-name: pinniped
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1-pinniped-addon
  namespace: default
stringData:
  values.yaml: |
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    infrastructure_provider: aws
    tkg_cluster_role: workload
    identity_management_type: oidc
    pinniped:
      cert_duration: 2160h
      cert_renew_before: 360h
      supervisor_svc_endpoint: null
      supervisor_ca_bundle_data: null
      image:
        name: pinniped
        tag: v0.4.4_vmware.1
        repository: projects.registry.vmware.com/tkg
        pull_policy: IfNotPresent
      post_deploy_job_image:
        name: tanzu_core/addons/tkg-pinniped-post-deploy
        tag: v1.4.0
        repository: projects.registry.vmware.com/tkg
        pull_policy: IfNotPresent
type: tkg.tanzu.vmware.com/addon
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: cni/antrea
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/addon-name: antrea
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1-antrea-addon
  namespace: default
stringData:
  values.yaml: |
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    infraProvider: aws
    antrea:
      config:
        serviceCIDR: 100.64.0.0/13
        trafficEncapMode: encap
        noSNAT: false
        tlsCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384
        featureGates:
          AntreaProxy: true
          EndpointSlice: false
          AntreaPolicy: true
          NodePortLocal: false
          AntreaTraceflow: true
      image:
        repository: projects.registry.vmware.com/tkg
        path: antrea/antrea-debian
        tag: v0.13.3_vmware.1
        pullPolicy: IfNotPresent
type: tkg.tanzu.vmware.com/addon
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/kapp-controller
    tkg.tanzu.vmware.com/remote-app: "true"
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/addon-name: kapp-controller
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1-kapp-controller-addon
  namespace: default
stringData:
  values.yaml: |
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    kappController:
      namespace: tkg-system
      createNamespace: true
      globalNamespace: tanzu-package-repo-global
      image:
        repository: projects.registry.vmware.com/tkg
        path: kapp-controller
        tag: v0.23.0_vmware.1
        pullPolicy: IfNotPresent
      deployment:
        concurrency: 4
        hostNetwork: true
        priorityClassName: system-cluster-critical
        apiPort: 10100
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
      config: {}
type: tkg.tanzu.vmware.com/addon
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metadata/tkg
  name: argo-tkg1-tkg-metadata-namespace-role
  namespace: default
stringData:
  value: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: tkg-system-public
      annotations:
        tkg.tanzu.vmware.com/addon-type: metadata/tkg
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: tkg-metadata-reader
      namespace: tkg-system-public
      annotations:
        tkg.tanzu.vmware.com/addon-type: metadata/tkg
    rules:
    - apiGroups:
      - ""
      resourceNames:
      - tkg-metadata
      - tkg-bom
      resources:
      - configmaps
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: tkg-metadata-reader
      namespace: tkg-system-public
      annotations:
        tkg.tanzu.vmware.com/addon-type: metadata/tkg
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: tkg-metadata-reader
    subjects:
    - apiGroup: rbac.authorization.k8s.io
      kind: Group
      name: system:authenticated
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metadata/tkg
  name: argo-tkg1-tkg-metadata-configmap
  namespace: default
stringData:
  value: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: tkg-metadata
      namespace: tkg-system-public
      annotations:
        tkg.tanzu.vmware.com/addon-type: metadata/tkg
    data:
      metadata.yaml: |
        cluster:
          name: argo-tkg1
          type: workload
          plan: dev
          kubernetesProvider: VMware Tanzu Kubernetes Grid
          tkgVersion: v1.4.0
          infrastructure:
            provider: aws
        bom:
          configmapRef:
            name: tkg-bom
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metadata/tkg
  name: argo-tkg1-tkg-metadata-bom-configmap
  namespace: default
stringData:
  value: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: tkg-bom
      namespace: tkg-system-public
      annotations:
        tkg.tanzu.vmware.com/addon-type: metadata/tkg
    data:
      bom.yaml: |
        apiVersion: run.tanzu.vmware.com/v1alpha2
        default:
          k8sVersion: v1.21.2+vmware.1-tkg.1
        release:
          version: v1.4.0
        components:
          aad-pod-identity:
          - version: v1.6.3+vmware.2
            images:
              micImage:
                imagePath: cluster-api/mic
                tag: v1.6.3_vmware.2
              nmiImage:
                imagePath: cluster-api/nmi
                tag: v1.6.3_vmware.2
          alertmanager:
          - version: v0.22.2+vmware.1
            images:
              alertmanagerImage:
                imagePath: prometheus/alertmanager
                tag: v0.22.2_vmware.1
          cadvisor:
          - version: v0.39.1+vmware.1
            images:
              cadvisorImage:
                imagePath: prometheus/cadvisor
                tag: v0.39.1_vmware.1
          cloud-provider-azure:
          - version: v0.7.4+vmware.1
            images:
              ccmAzureControllerImage:
                imagePath: azure-cloud-controller-manager
                tag: v0.7.4_vmware.1
              ccmAzureNodeImage:
                imagePath: azure-cloud-node-manager
                tag: v0.7.4_vmware.1
          cluster-api-provider-azure:
          - version: v0.4.15+vmware.1
            images:
              capzControllerImage:
                imagePath: cluster-api/cluster-api-azure-controller
                tag: v0.4.15_vmware.1
          cluster_api:
          - version: v0.3.23+vmware.1
            images:
              cabpkControllerImage:
                imagePath: cluster-api/kubeadm-bootstrap-controller
                tag: v0.3.23_vmware.1
              capdManagerImage:
                imagePath: cluster-api/capd-manager
                tag: v0.3.23_vmware.1
              capiControllerImage:
                imagePath: cluster-api/cluster-api-controller
                tag: v0.3.23_vmware.1
              kcpControllerImage:
                imagePath: cluster-api/kubeadm-control-plane-controller
                tag: v0.3.23_vmware.1
          cluster_api_aws:
          - version: v0.6.6+vmware.1
            images:
              capaControllerImage:
                imagePath: cluster-api/cluster-api-aws-controller
                tag: v0.6.6_vmware.1
          cluster_api_vsphere:
          - version: v0.7.10+vmware.1
            images:
              capvControllerImage:
                imagePath: cluster-api/cluster-api-vsphere-controller
                tag: v0.7.10_vmware.1
          configmap-reload:
          - version: v0.5.0+vmware.1
            images:
              configmapReloadImage:
                imagePath: prometheus/configmap-reload
                tag: v0.5.0_vmware.1
          contour:
          - version: v1.17.1+vmware.1
            images:
              contourImage:
                imagePath: contour
                tag: v1.17.1_vmware.1
          crash-diagnostics:
          - version: v0.3.3+vmware.1
          envoy:
          - version: v1.18.3+vmware.1
            images:
              envoyImage:
                imagePath: envoy
                tag: v1.18.3_vmware.1
          external-dns:
          - version: v0.8.0+vmware.1
            images:
              externalDNSImage:
                imagePath: external-dns
                tag: v0.8.0_vmware.1
          fluent-bit:
          - version: v1.7.5+vmware.1
            images:
              fluentBitImage:
                imagePath: fluent-bit
                tag: v1.7.5_vmware.1
          gangway:
          - version: v3.2.0+vmware.2
            images:
              gangwayImage:
                imagePath: gangway
                tag: v3.2.0_vmware.2
          grafana:
          - version: v7.5.7+vmware.1
            images:
              grafanaImage:
                imagePath: grafana/grafana
                tag: v7.5.7_vmware.1
          harbor:
          - version: v2.2.3+vmware.1
            images:
              harborChartMuseumImage:
                imagePath: harbor/chartmuseum-photon
                tag: v2.2.3_vmware.1
              harborCoreImage:
                imagePath: harbor/harbor-core
                tag: v2.2.3_vmware.1
              harborDatabaseImage:
                imagePath: harbor/harbor-db
                tag: v2.2.3_vmware.1
              harborExporterImage:
                imagePath: harbor/harbor-exporter
                tag: v2.2.3_vmware.1
              harborJobServiceImage:
                imagePath: harbor/harbor-jobservice
                tag: v2.2.3_vmware.1
              harborLogImage:
                imagePath: harbor/harbor-log
                tag: v2.2.3_vmware.1
              harborNginxImage:
                imagePath: harbor/nginx-photon
                tag: v2.2.3_vmware.1
              harborNotaryServerImage:
                imagePath: harbor/notary-server-photon
                tag: v2.2.3_vmware.1
              harborNotarySignerImage:
                imagePath: harbor/notary-signer-photon
                tag: v2.2.3_vmware.1
              harborPortalImage:
                imagePath: harbor/harbor-portal
                tag: v2.2.3_vmware.1
              harborPrepareImage:
                imagePath: harbor/prepare
                tag: v2.2.3_vmware.1
              harborRedisImage:
                imagePath: harbor/redis-photon
                tag: v2.2.3_vmware.1
              harborRegistryCtlImage:
                imagePath: harbor/harbor-registryctl
                tag: v2.2.3_vmware.1
              harborRegistryImage:
                imagePath: harbor/registry-photon
                tag: v2.2.3_vmware.1
              harborTrivyAdapterImage:
                imagePath: harbor/trivy-adapter-photon
                tag: v2.2.3_vmware.1
          image-builder:
          - version: v0.1.9+vmware.1
            images:
              imagebuilder-tar:
                imagePath: image-builder
                tag: v0.1.9_vmware.1
          imgpkg:
          - version: v0.10.0+vmware.1
          jetstack_cert-manager:
          - version: v1.1.0+vmware.1
            images:
              certMgrControllerImage:
                imagePath: cert-manager-controller
                tag: v1.1.0_vmware.1
              certMgrInjectorImage:
                imagePath: cert-manager-cainjector
                tag: v1.1.0_vmware.1
              certMgrWebhookImage:
                imagePath: cert-manager-webhook
                tag: v1.1.0_vmware.1
          k8s-sidecar:
          - version: v1.12.1+vmware.1
            images:
              k8sSidecarImage:
                imagePath: grafana/k8s-sidecar
                tag: v1.12.1_vmware.1
          k14s_kapp:
          - version: v0.37.0+vmware.1
          k14s_ytt:
          - version: v0.34.0+vmware.1
          kbld:
          - version: v0.30.0+vmware.1
          kube-state-metrics:
          - version: v1.9.8+vmware.1
            images:
              kubeStateMetricsImage:
                imagePath: prometheus/kube-state-metrics
                tag: v1.9.8_vmware.1
          kube-vip:
          - version: v0.3.3+vmware.1
            images:
              kubeVipImage:
                imagePath: kube-vip
                tag: v0.3.3_vmware.1
          kube_rbac_proxy:
          - version: v0.8.0+vmware.1
            images:
              kubeRbacProxyControllerImage:
                imagePath: kube-rbac-proxy
                tag: v0.8.0_vmware.1
              kubeRbacProxyControllerImageCapi:
                imagePath: cluster-api/kube-rbac-proxy
                tag: v0.8.0_vmware.1
          kubernetes-sigs_kind:
          - version: v1.21.2+vmware.1
            images:
              kindNodeImage:
                imagePath: kind/node
                tag: v1.21.2_vmware.1
          kubernetes_autoscaler:
          - version: v1.21.0+vmware.1
            images:
              kubernetesAutoscalerImage:
                imagePath: cluster-autoscaler
                tag: v1.21.0_vmware.1
            metadata:
              k8sversion: v1.21.1+vmware.1
          - version: v1.20.0+vmware.1
            images:
              kubernetesAutoscalerImage:
                imagePath: cluster-autoscaler
                tag: v1.20.0_vmware.1
            metadata:
              k8sversion: v1.20.4+vmware.1
          - version: v1.19.1+vmware.1
            images:
              kubernetesAutoscalerImage:
                imagePath: cluster-autoscaler
                tag: v1.19.1_vmware.1
            metadata:
              k8sversion: v1.19.8+vmware.1
          multus-cni:
          - version: v3.7.1+vmware.1
            images:
              multusCniImage:
                imagePath: multus-cni
                tag: v3.7.1_vmware.1
          prometheus:
          - version: v2.27.0+vmware.1
            images:
              prometheusImage:
                imagePath: prometheus/prometheus
                tag: v2.27.0_vmware.1
          prometheus_node_exporter:
          - version: v1.1.2+vmware.1
            images:
              prometheusNodeExporterImage:
                imagePath: prometheus/prometheus_node_exporter
                tag: v1.1.2_vmware.1
          pushgateway:
          - version: v1.4.0+vmware.1
            images:
              pushgatewayImage:
                imagePath: prometheus/pushgateway
                tag: v1.4.0_vmware.1
          sonobuoy:
          - version: v0.20.0+vmware.1
            images:
              sonobuoyImage:
                imagePath: sonobuoy
                tag: v0.20.0_vmware.1
          tanzu-framework:
          - version: v1.4.0
            images:
              capabilitiesImage:
                imagePath: tanzu_core/capabilities/capabilities-controller-manager
                tag: v1.4.0
              providerTemplateImage:
                imagePath: tanzu_core/provider/provider-templates
                tag: v1.4.0
              tkrImage:
                imagePath: tanzu_core/tkr/tkr-controller-manager
                tag: v1.4.0
          tkg-bom:
          - version: v1.4.0
            images:
              tkgBomImage:
                imagePath: tkg-bom
                tag: v1.4.0
          tkg-standard-packages:
          - version: v1.4.0
            images:
              cert-manager.tanzu.vmware.com:
                imagePath: packages/standard/cert-manager
                tag: v1.1.0_vmware.1-tkg.2
              contour.tanzu.vmware.com:
                imagePath: packages/standard/contour
                tag: v1.17.1_vmware.1-tkg.1
              external-dns.tanzu.vmware.com:
                imagePath: packages/standard/external-dns
                tag: v0.8.0_vmware.1-tkg.1
              fluent-bit.tanzu.vmware.com:
                imagePath: packages/standard/fluent-bit
                tag: v1.7.5_vmware.1-tkg.1
              grafana.tanzu.vmware.com:
                imagePath: packages/standard/grafana
                tag: v7.5.7_vmware.1-tkg.1
              harbor.tanzu.vmware.com:
                imagePath: packages/standard/harbor
                tag: v2.2.3_vmware.1-tkg.1
              multus-cni.tanzu.vmware.com:
                imagePath: packages/standard/multus-cni
                tag: v3.7.1_vmware.1-tkg.1
              prometheus.tanzu.vmware.com:
                imagePath: packages/standard/prometheus
                tag: v2.27.0_vmware.1-tkg.1
              tanzuStandardPackageRepositoryImage:
                imagePath: packages/standard/repo
                tag: v1.4.0
          tkg_telemetry:
          - version: v1.4.0+vmware.1
            images:
              tkgTelemetryImage:
                imagePath: tkg-telemetry
                tag: v1.4.0_vmware.1
          velero:
          - version: v1.6.2+vmware.1
            images:
              veleroImage:
                imagePath: velero/velero
                tag: v1.6.2_vmware.1
              veleroResticRestoreHelperImage:
                imagePath: velero/velero-restic-restore-helper
                tag: v1.6.2_vmware.1
          velero-plugin-for-aws:
          - version: v1.2.1+vmware.1
            images:
              veleroPluginForAwsImage:
                imagePath: velero/velero-plugin-for-aws
                tag: v1.2.1_vmware.1
          velero-plugin-for-microsoft-azure:
          - version: v1.2.1+vmware.1
            images:
              veleroPluginForMicrosoftAzureImage:
                imagePath: velero/velero-plugin-for-microsoft-azure
                tag: v1.2.1_vmware.1
          velero-plugin-for-vsphere:
          - version: v1.1.1+vmware.1
            images:
              veleroBackupDriverImage:
                imagePath: velero/backup-driver
                tag: v1.1.1_vmware.1
              veleroDataManagerForPluginImage:
                imagePath: velero/data-manager-for-plugin
                tag: v1.1.1_vmware.1
              veleroPluginForVsphereImage:
                imagePath: velero/velero-plugin-for-vsphere
                tag: v1.1.1_vmware.1
          vendir:
          - version: v0.21.1+vmware.1
        kindKubeadmConfigSpec:
        - 'kind: Cluster'
        - 'apiVersion: kind.x-k8s.io/v1alpha4'
        - 'kubeadmConfigPatches:'
        - '- |'
        - '  apiVersion: kubeadm.k8s.io/v1beta2'
        - '  kind: ClusterConfiguration'
        - '  imageRepository: projects.registry.vmware.com/tkg'
        - '  etcd:'
        - '    local:'
        - '      imageRepository: projects.registry.vmware.com/tkg'
        - '      imageTag: v3.4.13_vmware.15'
        - '  dns:'
        - '    type: CoreDNS'
        - '    imageRepository: projects.registry.vmware.com/tkg'
        - '    imageTag: v1.8.0_vmware.5'
        imageConfig:
          imageRepository: projects.registry.vmware.com/tkg
        tkr-bom:
          imagePath: tkr-bom
        tkr-compatibility:
          imagePath: tkr-compatibility
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metadata/tkg
  labels:
    cluster.x-k8s.io/cluster-name: argo-tkg1
  name: argo-tkg1-tkg-metadata
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  resources:
  - kind: Secret
    name: argo-tkg1-tkg-metadata-namespace-role
  - kind: Secret
    name: argo-tkg1-tkg-metadata-configmap
  - kind: Secret
    name: argo-tkg1-tkg-metadata-bom-configmap
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: metrics/metrics-server
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/addon-name: metrics-server
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1-metrics-server-addon
  namespace: default
stringData:
  values.yaml: |
    #@data/values
    #@overlay/match-child-defaults missing_ok=True
    ---
    metricsServer:
      namespace: kube-system
      config:
        args: []
        probe:
          failureThreshold: 3
          periodSeconds: 10
        apiServiceInsecureTLS: true
      image:
        name: metrics-server
        tag: v0.4.0_vmware.1
        repository: projects.registry.vmware.com/tkg
        pullPolicy: IfNotPresent
type: tkg.tanzu.vmware.com/addon
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/core-package-repo
  labels:
    cluster.x-k8s.io/cluster-name: argo-tkg1
  name: argo-tkg1-core-package-repository
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  resources:
  - kind: Secret
    name: argo-tkg1-core-package-repository-crs
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/core-package-repo
  name: argo-tkg1-core-package-repository-crs
  namespace: default
stringData:
  value: |
    apiVersion: packaging.carvel.dev/v1alpha1
    kind: PackageRepository
    metadata:
      name: tanzu-core
      namespace: tkg-system
      annotations:
        tkg.tanzu.vmware.com/addon-type: addons-management/core-package-repo
    spec:
      fetch:
        imgpkgBundle:
          image: projects.registry.vmware.com/tkg/packages/core/repo:v1.21.2_vmware.1-tkg.1
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/standard-package-repo
  labels:
    cluster.x-k8s.io/cluster-name: argo-tkg1
  name: argo-tkg1-standard-package-repository
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  resources:
  - kind: Secret
    name: argo-tkg1-standard-package-repository-crs
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: addons-management/standard-package-repo
  name: argo-tkg1-standard-package-repository-crs
  namespace: default
stringData:
  value: |
    apiVersion: packaging.carvel.dev/v1alpha1
    kind: PackageRepository
    metadata:
      name: tanzu-standard
      namespace: tanzu-package-repo-global
      annotations:
        tkg.tanzu.vmware.com/addon-type: addons-management/standard-package-repo
        tanzu.vmware.com/owner: tkg
    spec:
      fetch:
        imgpkgBundle:
          image: projects.registry.vmware.com/tkg/packages/standard/repo:v1.4.0
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineHealthCheck
metadata:
  name: argo-tkg1
  namespace: default
spec:
  clusterName: argo-tkg1
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      node-pool: argo-tkg1-worker-pool
  unhealthyConditions:
  - status: Unknown
    timeout: 5m
    type: Ready
  - status: "False"
    timeout: 12m
    type: Ready
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineHealthCheck
metadata:
  name: argo-tkg1-control-plane
  namespace: default
spec:
  clusterName: argo-tkg1
  nodeStartupTimeout: 20m
  selector:
    matchLabels:
      cluster.x-k8s.io/control-plane: ""
  unhealthyConditions:
  - status: Unknown
    timeout: 5m
    type: Ready
  - status: "False"
    timeout: 12m
    type: Ready
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: argo-tkg1
  name: argo-tkg1-default-storage-class
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  resources:
  - kind: Secret
    name: argo-tkg1-default-storage-class
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  name: argo-tkg1-default-storage-class
  namespace: default
stringData:
  value: |
    kind: StorageClass
    apiVersion: storage.k8s.io/v1
    metadata:
      name: default
      annotations:
        storageclass.kubernetes.io/is-default-class: "true"
    provisioner: kubernetes.io/aws-ebs
    allowVolumeExpansion: true
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  annotations:
    tkg.tanzu.vmware.com/addon-type: capabilities/capabilities-controller
  labels:
    cluster.x-k8s.io/cluster-name: argo-tkg1
  name: argo-tkg1-capabilities
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  resources:
  - kind: Secret
    name: argo-tkg1-capabilities
  strategy: ApplyOnce
---
apiVersion: v1
kind: Secret
metadata:
  name: argo-tkg1-capabilities
  namespace: default
stringData:
  value: |
    apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.2.5
      creationTimestamp: null
      name: capabilities.run.tanzu.vmware.com
    spec:
      group: run.tanzu.vmware.com
      names:
        kind: Capability
        listKind: CapabilityList
        plural: capabilities
        singular: capability
      scope: Namespaced
      subresources:
        status: {}
      validation:
        openAPIV3Schema:
          description: Capability is the Schema for the capabilities API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec is the capability spec that has cluster queries.
              properties:
                queries:
                  description: Queries specifies set of queries that are evaluated.
                  items:
                    description: Query is a logical grouping of GVR, Object and PartialSchema queries.
                    properties:
                      groupVersionResources:
                        description: GroupVersionResources evaluates a slice of GVR queries.
                        items:
                          description: QueryGVR queries for an API group with the optional ability to check for API versions and resource.
                          properties:
                            group:
                              description: Group is the API group to check for in the cluster.
                              minLength: 1
                              type: string
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            resource:
                              description: Resource is the API resource to check for given an API group and a slice of versions. Specifying a Resource requires at least one version to be specified in Versions.
                              type: string
                            versions:
                              description: Versions is the slice of versions to check for in the specified API group.
                              items:
                                type: string
                              type: array
                          required:
                          - group
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the unique name of the query.
                        minLength: 1
                        type: string
                      objects:
                        description: Objects evaluates a slice of Object queries.
                        items:
                          description: QueryObject represents any runtime.Object that could exist in a cluster with the ability to check for annotations.
                          properties:
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            objectReference:
                              description: ObjectReference is the ObjectReference to check for in the cluster.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                                  type: string
                                kind:
                                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                namespace:
                                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                  type: string
                                resourceVersion:
                                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                  type: string
                                uid:
                                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                  type: string
                              type: object
                            withAnnotations:
                              additionalProperties:
                                type: string
                              description: WithAnnotations are the annotations whose presence is checked in the object. The query succeeds only if all the annotations specified exists.
                              type: object
                            withoutAnnotations:
                              additionalProperties:
                                type: string
                              description: WithAnnotations are the annotations whose absence is checked in the object. The query succeeds only if all the annotations specified do not exist.
                              type: object
                          required:
                          - name
                          - objectReference
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      partialSchemas:
                        description: PartialSchemas evaluates a slice of PartialSchema queries.
                        items:
                          description: QueryPartialSchema queries for any OpenAPI schema that may exist on a cluster.
                          properties:
                            name:
                              description: Name is the unique name of the query.
                              minLength: 1
                              type: string
                            partialSchema:
                              description: PartialSchema is the partial OpenAPI schema that will be matched in a cluster.
                              minLength: 1
                              type: string
                          required:
                          - name
                          - partialSchema
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - name
                  x-kubernetes-list-type: map
              required:
              - queries
              type: object
            status:
              description: Status is the capability status that has results of cluster queries.
              properties:
                results:
                  description: Results represents the results of all the queries specified in the spec.
                  items:
                    description: Result represents the results of queries in Query.
                    properties:
                      groupVersionResources:
                        description: GroupVersionResources represents results of GVR queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      name:
                        description: Name is the unique name of the query.
                        minLength: 1
                        type: string
                      objects:
                        description: Objects represents results of Object queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      partialSchemas:
                        description: PartialSchemas represents results of PartialSchema queries in spec.
                        items:
                          description: QueryResult represents the result of a single query.
                          properties:
                            error:
                              description: Error indicates if an error occurred while processing the query.
                              type: boolean
                            errorDetail:
                              description: ErrorDetail represents the error detail, if an error occurred.
                              type: string
                            found:
                              description: Found is a boolean which indicates if the query condition succeeded.
                              type: boolean
                            name:
                              description: Name is the name of the query in spec whose result this struct represents.
                              minLength: 1
                              type: string
                            notFoundReason:
                              description: NotFoundReason provides the reason if the query condition fails. This is non-empty when Found is false.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    required:
                    - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - name
                  x-kubernetes-list-type: map
              required:
              - results
              type: object
          type: object
      version: v1alpha1
      versions:
      - name: v1alpha1
        served: true
        storage: true
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: tanzu-capabilities-manager
      name: tanzu-capabilities-manager-sa
      namespace: tkg-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: tanzu-capabilities-manager-clusterrole
    rules:
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - capabilities
      verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - capabilities/status
      verbs:
      - get
      - patch
      - update
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - tanzukubernetesreleases
      - tanzukubernetesreleases/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - run.tanzu.vmware.com
      resources:
      - tanzukubernetesclusters
      - tanzukubernetesclusters/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - clusterctl.cluster.x-k8s.io
      resources:
      - providers
      - providers/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - configmaps
      - namespaces
      - nodes
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: tanzu-capabilities-manager-clusterrolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: tanzu-capabilities-manager-clusterrole
    subjects:
    - kind: ServiceAccount
      name: tanzu-capabilities-manager-sa
      namespace: tkg-system
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: tanzu-capabilities-manager
      name: tanzu-capabilities-controller-manager
      namespace: tkg-system
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: tanzu-capabilities-manager
      template:
        metadata:
          labels:
            app: tanzu-capabilities-manager
        spec:
          containers:
          - image: projects.registry.vmware.com/tkg/tanzu_core/capabilities/capabilities-controller-manager:v1.4.0
            imagePullPolicy: IfNotPresent
            name: manager
            resources:
              limits:
                cpu: 100m
                memory: 30Mi
              requests:
                cpu: 100m
                memory: 20Mi
          serviceAccount: tanzu-capabilities-manager-sa
          terminationGracePeriodSeconds: 10
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: ""
    tkg.tanzu.vmware.com/cluster-name: argo-tkg1
  name: argo-tkg1-config-values
  namespace: default
stringData:
  value: |
    CLUSTER_NAME: argo-tkg1
    CLUSTER_PLAN: dev
    NAMESPACE: default
    INFRASTRUCTURE_PROVIDER: null
    SIZE: null
    CONTROLPLANE_SIZE: null
    WORKER_SIZE: null
    ENABLE_CEIP_PARTICIPATION: null
    TMC_REGISTRATION_URL: null
    AWS_REGION: eu-west-1
    AWS_NODE_AZ: eu-west-1a
    AWS_NODE_AZ_1: ""
    AWS_NODE_AZ_2: ""
    AWS_VPC_ID: vpc-08f20a803623faaed
    AWS_PRIVATE_SUBNET_ID: subnet-0ad8037f3866034e2
    AWS_PUBLIC_SUBNET_ID: subnet-0fb6afddee13c16b7
    AWS_PUBLIC_SUBNET_ID_1: ""
    AWS_PRIVATE_SUBNET_ID_1: ""
    AWS_PUBLIC_SUBNET_ID_2: ""
    AWS_PRIVATE_SUBNET_ID_2: ""
    AWS_VPC_CIDR: ""
    AWS_PRIVATE_NODE_CIDR: ""
    AWS_PUBLIC_NODE_CIDR: ""
    AWS_PRIVATE_NODE_CIDR_1: 10.0.2.0/24
    AWS_PUBLIC_NODE_CIDR_1: 10.0.3.0/24
    AWS_PRIVATE_NODE_CIDR_2: 10.0.4.0/24
    AWS_PUBLIC_NODE_CIDR_2: 10.0.5.0/24
    AWS_SECURITY_GROUP_APISERVER_LB: ""
    AWS_SECURITY_GROUP_BASTION: ""
    AWS_SECURITY_GROUP_CONTROLPLANE: ""
    AWS_SECURITY_GROUP_LB: ""
    AWS_SECURITY_GROUP_NODE: ""
    AWS_IDENTITY_REF_KIND: ""
    AWS_IDENTITY_REF_NAME: ""
    AWS_CONTROL_PLANE_OS_DISK_SIZE_GIB: 80
    AWS_NODE_OS_DISK_SIZE_GIB: 80
    CONTROL_PLANE_MACHINE_TYPE: t3.large
    NODE_MACHINE_TYPE: m5.large
    NODE_MACHINE_TYPE_1: ""
    NODE_MACHINE_TYPE_2: ""
    AWS_SSH_KEY_NAME: default
    BASTION_HOST_ENABLED: false
    ENABLE_OIDC: false
    OIDC_ISSUER_URL: null
    OIDC_USERNAME_CLAIM: null
    OIDC_GROUPS_CLAIM: null
    OIDC_DEX_CA: null
    ENABLE_MHC: null
    ENABLE_MHC_WORKER_NODE: true
    ENABLE_MHC_CONTROL_PLANE: true
    MHC_UNKNOWN_STATUS_TIMEOUT: 5m
    MHC_FALSE_STATUS_TIMEOUT: 12m
    TKG_CUSTOM_IMAGE_REPOSITORY: ""
    TKG_CUSTOM_IMAGE_REPOSITORY_SKIP_TLS_VERIFY: false
    TKG_CUSTOM_IMAGE_REPOSITORY_CA_CERTIFICATE: ""
    TKG_HTTP_PROXY: ""
    TKG_HTTPS_PROXY: ""
    TKG_NO_PROXY: ""
    TKG_IP_FAMILY: null
    ENABLE_AUDIT_LOGGING: true
    ENABLE_DEFAULT_STORAGE_CLASS: true
    CLUSTER_CIDR: 100.96.0.0/11
    SERVICE_CIDR: 100.64.0.0/13
    NODE_STARTUP_TIMEOUT: 20m
    CONTROL_PLANE_MACHINE_COUNT: 1
    WORKER_MACHINE_COUNT: 1
    WORKER_MACHINE_COUNT_0: 1
    WORKER_MACHINE_COUNT_1: null
    WORKER_MACHINE_COUNT_2: null
    OS_NAME: ubuntu
    OS_VERSION: 20.04
    OS_ARCH: amd64
    ENABLE_AUTOSCALER: false
    AUTOSCALER_MAX_NODES_TOTAL: "0"
    AUTOSCALER_SCALE_DOWN_DELAY_AFTER_ADD: 10m
    AUTOSCALER_SCALE_DOWN_DELAY_AFTER_DELETE: 10s
    AUTOSCALER_SCALE_DOWN_DELAY_AFTER_FAILURE: 3m
    AUTOSCALER_SCALE_DOWN_UNNEEDED_TIME: 10m
    AUTOSCALER_MAX_NODE_PROVISION_TIME: 15m
    AUTOSCALER_MIN_SIZE_0: null
    AUTOSCALER_MAX_SIZE_0: null
    AUTOSCALER_MIN_SIZE_1: null
    AUTOSCALER_MAX_SIZE_1: null
    AUTOSCALER_MIN_SIZE_2: null
    AUTOSCALER_MAX_SIZE_2: null
    IDENTITY_MANAGEMENT_TYPE: oidc
    CERT_DURATION: 2160h
    CERT_RENEW_BEFORE: 360h
    OIDC_IDENTITY_PROVIDER_NAME: null
    OIDC_IDENTITY_PROVIDER_ISSUER_URL: null
    OIDC_IDENTITY_PROVIDER_CLIENT_ID: null
    OIDC_IDENTITY_PROVIDER_SCOPES: email,profile,groups
    OIDC_IDENTITY_PROVIDER_USERNAME_CLAIM: null
    OIDC_IDENTITY_PROVIDER_GROUPS_CLAIM: null
    SUPERVISOR_ISSUER_URL: null
    SUPERVISOR_ISSUER_CA_BUNDLE_DATA_B64: null
    LDAP_BIND_DN: null
    LDAP_HOST: null
    LDAP_USER_SEARCH_BASE_DN: null
    LDAP_USER_SEARCH_FILTER: null
    LDAP_USER_SEARCH_USERNAME: userPrincipalName
    LDAP_USER_SEARCH_ID_ATTRIBUTE: DN
    LDAP_USER_SEARCH_EMAIL_ATTRIBUTE: DN
    LDAP_USER_SEARCH_NAME_ATTRIBUTE: null
    LDAP_GROUP_SEARCH_BASE_DN: null
    LDAP_GROUP_SEARCH_FILTER: null
    LDAP_GROUP_SEARCH_USER_ATTRIBUTE: DN
    LDAP_GROUP_SEARCH_GROUP_ATTRIBUTE: null
    LDAP_GROUP_SEARCH_NAME_ATTRIBUTE: cn
    LDAP_ROOT_CA_DATA_B64: null
    ANTREA_NO_SNAT: false
    ANTREA_TRAFFIC_ENCAP_MODE: encap
    ANTREA_PROXY: true
    ANTREA_ENDPOINTSLICE: false
    ANTREA_POLICY: true
    ANTREA_NODEPORTLOCAL: false
    ANTREA_TRACEFLOW: true
    PROVIDER_TYPE: aws
    TKG_CLUSTER_ROLE: workload
    TKG_VERSION: v1.4.0
    CNI: antrea
type: addons.cluster.x-k8s.io/resource-set
